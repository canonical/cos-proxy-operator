type: charm
bases:
  - build-on:
    - name: "ubuntu"
      channel: "20.04"
    run-on:  
    - name: "ubuntu"
      channel: "20.04"
  - build-on:
    - name: "ubuntu"
      channel: "22.04"
    run-on:
    - name: "ubuntu"
      channel: "22.04"
parts:
  charm:
    build-packages:
    - "git"
    charm-binary-python-packages:
      # Install PyYAML from binary and avoid building it from sources. This way, we can use PyYAML with C-optimized lib.
      # With the C-optimized lib, serialization in ops is 20x faster.
      - PyYAML
  nrpe-exporter:
    plugin: dump
    source: .
    build-packages:
      - curl
    override-pull: |
      if [ $CRAFT_TARGET_ARCH == "amd64" ]; then
        URI=https://github.com/canonical/nrpe_exporter/releases/latest/download/nrpe_exporter-amd64
        curl -L $URI -o nrpe_exporter-amd64
      elif [ $CRAFT_TARGET_ARCH == "arm64" ] || [ $CRAFT_TARGET_ARCH == "aarch64" ]; then
        URI=https://github.com/canonical/nrpe_exporter/releases/latest/download/nrpe_exporter-arm64
        curl -L $URI -o nrpe_exporter-aarch64
      fi
  vector:
    plugin: dump
    source: .
    build-packages:
      - curl
      - tar
    override-pull: |
      VERSION=0.36.0
      if [ $CRAFT_TARGET_ARCH == "amd64" ]; then
        ARCH=x86_64-unknown-linux-musl
      elif [ $CRAFT_TARGET_ARCH == "arm64" ]; then
        ARCH=aarch64-unknown-linux-musl
      fi

      VECTOR_URI="https://packages.timber.io/vector/${VERSION}/vector-${VERSION}-${ARCH}.tar.gz"
      curl -sSfL ${VECTOR_URI} | tar xzf - -C . --strip-components=3 ./vector-${ARCH}/bin/vector
